/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Factra, FactraInterface } from "../Factra";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dueDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "businessName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sector",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "discountRate",
        type: "uint8",
      },
    ],
    name: "InvoiceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvoiceFunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "InvoicePaid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dueDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "businessName",
        type: "string",
      },
      {
        internalType: "string",
        name: "sector",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "discountRate",
        type: "uint8",
      },
    ],
    name: "createInvoice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "fundInvoice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getInvoice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "enum Factra.InvoiceStatus",
        name: "",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvoiceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "invoiceCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "invoices",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "issuer",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dueDate",
        type: "uint256",
      },
      {
        internalType: "enum Factra.InvoiceStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "businessName",
        type: "string",
      },
      {
        internalType: "string",
        name: "sector",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "discountRate",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "markAsPaid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506117c1806100206000396000f3fe6080604052600436106100705760003560e01c806364d5fa471161004e57806364d5fa471461012a5780637021cafe146101465780637d6a59ed1461016f578063a57b381c1461019a57610070565b80633a23cc0a146100755780634e6d1405146100bb5780634eb39d4d14610101575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610cc1565b6101c5565b6040516100b29a99989796959493929190610e61565b60405180910390f35b3480156100c757600080fd5b506100e260048036038101906100dd9190610cc1565b6104b0565b6040516100f89a99989796959493929190610f2c565b60405180910390f35b34801561010d57600080fd5b5061012860048036038101906101239190611137565b61067b565b005b610144600480360381019061013f9190610cc1565b6108e6565b005b34801561015257600080fd5b5061016d60048036038101906101689190610cc1565b610ae9565b005b34801561017b57600080fd5b50610184610c68565b60405161019191906111fc565b60405180910390f35b3480156101a657600080fd5b506101af610c71565b6040516101bc91906111fc565b60405180910390f35b6000806000806000806060806000806000600160008d815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660028111156102e4576102e3610d3e565b5b60028111156102f6576102f5610d3e565b5b815260200160068201805461030a90611246565b80601f016020809104026020016040519081016040528092919081815260200182805461033690611246565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050815260200160078201805461039c90611246565b80601f01602080910402602001604051908101604052809291908181526020018280546103c890611246565b80156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b505050505081526020016008820160009054906101000a900460ff1660ff1660ff1681526020016008820160019054906101000a900460ff1660ff1660ff16815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001519a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff169080600601805461054490611246565b80601f016020809104026020016040519081016040528092919081815260200182805461057090611246565b80156105bd5780601f10610592576101008083540402835291602001916105bd565b820191906000526020600020905b8154815290600101906020018083116105a057829003601f168201915b5050505050908060070180546105d290611246565b80601f01602080910402602001604051908101604052809291908181526020018280546105fe90611246565b801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b5050505050908060080160009054906101000a900460ff16908060080160019054906101000a900460ff1690508a565b60008081548092919061068d906112a6565b919050555060405180610140016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001600060028111156106ff576106fe610d3e565b5b81526020018581526020018481526020018360ff1681526020018260ff1681525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083600281111561080b5761080a610d3e565b5b021790555060c0820151816006019081610825919061149a565b5060e082015181600701908161083b919061149a565b506101008201518160080160006101000a81548160ff021916908360ff1602179055506101208201518160080160016101000a81548160ff021916908360ff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff166000547f667d4ec8701b00c65a8b6b0e26b5a31ef25fc67ec83bfa2fb09a572900576a5e8888888888886040516108d69695949392919061156c565b60405180910390a3505050505050565b60006001600083815260200190815260200160002090506000600281111561091157610910610d3e565b5b8160050160009054906101000a900460ff16600281111561093557610934610d3e565b5b14610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c90611627565b60405180910390fd5b806003015434146109bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b290611693565b60405180910390fd5b338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160050160006101000a81548160ff02191690836002811115610a2657610a25610d3e565b5b02179055508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a95573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff16827fa89eb6891733765ee1680954e6c13fbca417ad37abee83d50d8efdb86a6db52334604051610add91906111fc565b60405180910390a35050565b60006001600083815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b89906116ff565b60405180910390fd5b60016002811115610ba657610ba5610d3e565b5b8160050160009054906101000a900460ff166002811115610bca57610bc9610d3e565b5b14610c0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c019061176b565b60405180910390fd5b60028160050160006101000a81548160ff02191690836002811115610c3257610c31610d3e565b5b0217905550817f4d6cfd329415806d53db8988cd3c035f681754c229f8d7e5183507deae65cc1660405160405180910390a25050565b60008054905090565b60005481565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610c9e81610c8b565b8114610ca957600080fd5b50565b600081359050610cbb81610c95565b92915050565b600060208284031215610cd757610cd6610c81565b5b6000610ce584828501610cac565b91505092915050565b610cf781610c8b565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2882610cfd565b9050919050565b610d3881610d1d565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610d7e57610d7d610d3e565b5b50565b6000819050610d8f82610d6d565b919050565b6000610d9f82610d81565b9050919050565b610daf81610d94565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610def578082015181840152602081019050610dd4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e1782610db5565b610e218185610dc0565b9350610e31818560208601610dd1565b610e3a81610dfb565b840191505092915050565b600060ff82169050919050565b610e5b81610e45565b82525050565b600061014082019050610e77600083018d610cee565b610e84602083018c610d2f565b610e91604083018b610d2f565b610e9e606083018a610cee565b610eab6080830189610cee565b610eb860a0830188610da6565b81810360c0830152610eca8187610e0c565b905081810360e0830152610ede8186610e0c565b9050610eee610100830185610e52565b610efc610120830184610e52565b9b9a5050505050505050505050565b6000610f1682610cfd565b9050919050565b610f2681610f0b565b82525050565b600061014082019050610f42600083018d610cee565b610f4f602083018c610f1d565b610f5c604083018b610f1d565b610f69606083018a610cee565b610f766080830189610cee565b610f8360a0830188610da6565b81810360c0830152610f958187610e0c565b905081810360e0830152610fa98186610e0c565b9050610fb9610100830185610e52565b610fc7610120830184610e52565b9b9a5050505050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61101882610dfb565b810181811067ffffffffffffffff8211171561103757611036610fe0565b5b80604052505050565b600061104a610c77565b9050611056828261100f565b919050565b600067ffffffffffffffff82111561107657611075610fe0565b5b61107f82610dfb565b9050602081019050919050565b82818337600083830152505050565b60006110ae6110a98461105b565b611040565b9050828152602081018484840111156110ca576110c9610fdb565b5b6110d584828561108c565b509392505050565b600082601f8301126110f2576110f1610fd6565b5b813561110284826020860161109b565b91505092915050565b61111481610e45565b811461111f57600080fd5b50565b6000813590506111318161110b565b92915050565b60008060008060008060c0878903121561115457611153610c81565b5b600061116289828a01610cac565b965050602061117389828a01610cac565b955050604087013567ffffffffffffffff81111561119457611193610c86565b5b6111a089828a016110dd565b945050606087013567ffffffffffffffff8111156111c1576111c0610c86565b5b6111cd89828a016110dd565b93505060806111de89828a01611122565b92505060a06111ef89828a01611122565b9150509295509295509295565b60006020820190506112116000830184610cee565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061125e57607f821691505b60208210810361127157611270611217565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112b182610c8b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112e3576112e2611277565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611313565b61135a8683611313565b95508019841693508086168417925050509392505050565b6000819050919050565b600061139761139261138d84610c8b565b611372565b610c8b565b9050919050565b6000819050919050565b6113b18361137c565b6113c56113bd8261139e565b848454611320565b825550505050565b600090565b6113da6113cd565b6113e58184846113a8565b505050565b5b81811015611409576113fe6000826113d2565b6001810190506113eb565b5050565b601f82111561144e5761141f816112ee565b61142884611303565b81016020851015611437578190505b61144b61144385611303565b8301826113ea565b50505b505050565b600082821c905092915050565b600061147160001984600802611453565b1980831691505092915050565b600061148a8383611460565b9150826002028217905092915050565b6114a382610db5565b67ffffffffffffffff8111156114bc576114bb610fe0565b5b6114c68254611246565b6114d182828561140d565b600060209050601f83116001811461150457600084156114f2578287015190505b6114fc858261147e565b865550611564565b601f198416611512866112ee565b60005b8281101561153a57848901518255600182019150602085019450602081019050611515565b868310156115575784890151611553601f891682611460565b8355505b6001600288020188555050505b505050505050565b600060c0820190506115816000830189610cee565b61158e6020830188610cee565b81810360408301526115a08187610e0c565b905081810360608301526115b48186610e0c565b90506115c36080830185610e52565b6115d060a0830184610e52565b979650505050505050565b7f416c72656164792066756e646564206f7220696e76616c696400000000000000600082015250565b6000611611601983610dc0565b915061161c826115db565b602082019050919050565b6000602082019050818103600083015261164081611604565b9050919050565b7f496e636f72726563742066756e64696e6720616d6f756e740000000000000000600082015250565b600061167d601883610dc0565b915061168882611647565b602082019050919050565b600060208201905081810360008301526116ac81611670565b9050919050565b7f4f6e6c792062757965722063616e206d61726b20706169640000000000000000600082015250565b60006116e9601883610dc0565b91506116f4826116b3565b602082019050919050565b60006020820190508181036000830152611718816116dc565b9050919050565b7f496e766f696365206e6f742066756e6465640000000000000000000000000000600082015250565b6000611755601283610dc0565b91506117608261171f565b602082019050919050565b6000602082019050818103600083015261178481611748565b905091905056fea264697066735822122060daa30b5e461702bc08097b04a3d270a7e3ba03e78cd22ce18692948813368964736f6c63430008180033";

type FactraConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FactraConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Factra__factory extends ContractFactory {
  constructor(...args: FactraConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Factra & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Factra__factory {
    return super.connect(runner) as Factra__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactraInterface {
    return new Interface(_abi) as FactraInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Factra {
    return new Contract(address, _abi, runner) as unknown as Factra;
  }
}
