/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Factra, FactraInterface } from "../Factra";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dueDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "businessName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sector",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "discountRate",
        type: "uint8",
      },
    ],
    name: "InvoiceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvoiceFunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "InvoicePaid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dueDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "businessName",
        type: "string",
      },
      {
        internalType: "string",
        name: "sector",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "discountRate",
        type: "uint8",
      },
    ],
    name: "createInvoice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "fundInvoice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getInvoice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "enum Factra.InvoiceStatus",
        name: "",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvoiceCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "invoiceCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "invoices",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "issuer",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dueDate",
        type: "uint256",
      },
      {
        internalType: "enum Factra.InvoiceStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "businessName",
        type: "string",
      },
      {
        internalType: "string",
        name: "sector",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "discountRate",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "markAsPaid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b9b806100206000396000f3fe6080604052600436106100705760003560e01c806364d5fa471161004e57806364d5fa471461012a5780637021cafe146101465780637d6a59ed1461016f578063a57b381c1461019a57610070565b80633a23cc0a146100755780634e6d1405146100bb5780634eb39d4d14610101575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610f40565b6101c5565b6040516100b29a999897969594939291906110e0565b60405180910390f35b3480156100c757600080fd5b506100e260048036038101906100dd9190610f40565b6104b0565b6040516100f89a999897969594939291906111ab565b60405180910390f35b34801561010d57600080fd5b50610128600480360381019061012391906113b6565b61067b565b005b610144600480360381019061013f9190610f40565b6108e6565b005b34801561015257600080fd5b5061016d60048036038101906101689190610f40565b610c7c565b005b34801561017b57600080fd5b50610184610dfb565b604051610191919061147b565b60405180910390f35b3480156101a657600080fd5b506101af610e04565b6040516101bc919061147b565b60405180910390f35b6000806000806000806060806000806000600160008d815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660028111156102e4576102e3610fbd565b5b60028111156102f6576102f5610fbd565b5b815260200160068201805461030a906114c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610336906114c5565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050815260200160078201805461039c906114c5565b80601f01602080910402602001604051908101604052809291908181526020018280546103c8906114c5565b80156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b505050505081526020016008820160009054906101000a900460ff1660ff1660ff1681526020016008820160019054906101000a900460ff1660ff1660ff16815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001519a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff1690806006018054610544906114c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610570906114c5565b80156105bd5780601f10610592576101008083540402835291602001916105bd565b820191906000526020600020905b8154815290600101906020018083116105a057829003601f168201915b5050505050908060070180546105d2906114c5565b80601f01602080910402602001604051908101604052809291908181526020018280546105fe906114c5565b801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b5050505050908060080160009054906101000a900460ff16908060080160019054906101000a900460ff1690508a565b60008081548092919061068d90611525565b919050555060405180610140016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001600060028111156106ff576106fe610fbd565b5b81526020018581526020018481526020018360ff1681526020018260ff1681525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083600281111561080b5761080a610fbd565b5b021790555060c08201518160060190816108259190611719565b5060e082015181600701908161083b9190611719565b506101008201518160080160006101000a81548160ff021916908360ff1602179055506101208201518160080160016101000a81548160ff021916908360ff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff166000547f667d4ec8701b00c65a8b6b0e26b5a31ef25fc67ec83bfa2fb09a572900576a5e8888888888886040516108d6969594939291906117eb565b60405180910390a3505050505050565b60006001600083815260200190815260200160002090506000600281111561091157610910610fbd565b5b8160050160009054906101000a900460ff16600281111561093557610934610fbd565b5b14610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c906118a6565b60405180910390fd5b600060648260080160019054906101000a900460ff1660ff16836003015461099d91906118c6565b6109a79190611937565b82600301546109b69190611968565b90506109f76040518060400160405280600b81526020017f496e766f6963652049443a00000000000000000000000000000000000000000081525084610e0a565b610a3a6040518060400160405280601081526020017f4f726967696e616c20616d6f756e743a000000000000000000000000000000008152508360030154610e0a565b610a8d6040518060400160405280600e81526020017f446973636f756e7420726174653a0000000000000000000000000000000000008152508360080160019054906101000a900460ff1660ff16610e0a565b610acc6040518060400160405280601c81526020017f43616c63756c6174656420646973636f756e746564416d6f756e743a0000000081525082610e0a565b610b0b6040518060400160405280600f81526020017f6d73672e76616c75652073656e743a000000000000000000000000000000000081525034610e0a565b803414610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4490611a0e565b60405180910390fd5b338260020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018260050160006101000a81548160ff02191690836002811115610bb857610bb7610fbd565b5b02179055508160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610c27573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff16837fa89eb6891733765ee1680954e6c13fbca417ad37abee83d50d8efdb86a6db52334604051610c6f919061147b565b60405180910390a3505050565b60006001600083815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1c90611a7a565b60405180910390fd5b60016002811115610d3957610d38610fbd565b5b8160050160009054906101000a900460ff166002811115610d5d57610d5c610fbd565b5b14610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611ae6565b60405180910390fd5b60028160050160006101000a81548160ff02191690836002811115610dc557610dc4610fbd565b5b0217905550817f4d6cfd329415806d53db8988cd3c035f681754c229f8d7e5183507deae65cc1660405160405180910390a25050565b60008054905090565b60005481565b610ea28282604051602401610e20929190611b06565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ea6565b5050565b610ebd81610eb5610ec0610ee1565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b610eec819050919050565b610ef4611b36565b565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f1d81610f0a565b8114610f2857600080fd5b50565b600081359050610f3a81610f14565b92915050565b600060208284031215610f5657610f55610f00565b5b6000610f6484828501610f2b565b91505092915050565b610f7681610f0a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fa782610f7c565b9050919050565b610fb781610f9c565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610ffd57610ffc610fbd565b5b50565b600081905061100e82610fec565b919050565b600061101e82611000565b9050919050565b61102e81611013565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561106e578082015181840152602081019050611053565b60008484015250505050565b6000601f19601f8301169050919050565b600061109682611034565b6110a0818561103f565b93506110b0818560208601611050565b6110b98161107a565b840191505092915050565b600060ff82169050919050565b6110da816110c4565b82525050565b6000610140820190506110f6600083018d610f6d565b611103602083018c610fae565b611110604083018b610fae565b61111d606083018a610f6d565b61112a6080830189610f6d565b61113760a0830188611025565b81810360c0830152611149818761108b565b905081810360e083015261115d818661108b565b905061116d6101008301856110d1565b61117b6101208301846110d1565b9b9a5050505050505050505050565b600061119582610f7c565b9050919050565b6111a58161118a565b82525050565b6000610140820190506111c1600083018d610f6d565b6111ce602083018c61119c565b6111db604083018b61119c565b6111e8606083018a610f6d565b6111f56080830189610f6d565b61120260a0830188611025565b81810360c0830152611214818761108b565b905081810360e0830152611228818661108b565b90506112386101008301856110d1565b6112466101208301846110d1565b9b9a5050505050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112978261107a565b810181811067ffffffffffffffff821117156112b6576112b561125f565b5b80604052505050565b60006112c9610ef6565b90506112d5828261128e565b919050565b600067ffffffffffffffff8211156112f5576112f461125f565b5b6112fe8261107a565b9050602081019050919050565b82818337600083830152505050565b600061132d611328846112da565b6112bf565b9050828152602081018484840111156113495761134861125a565b5b61135484828561130b565b509392505050565b600082601f83011261137157611370611255565b5b813561138184826020860161131a565b91505092915050565b611393816110c4565b811461139e57600080fd5b50565b6000813590506113b08161138a565b92915050565b60008060008060008060c087890312156113d3576113d2610f00565b5b60006113e189828a01610f2b565b96505060206113f289828a01610f2b565b955050604087013567ffffffffffffffff81111561141357611412610f05565b5b61141f89828a0161135c565b945050606087013567ffffffffffffffff8111156114405761143f610f05565b5b61144c89828a0161135c565b935050608061145d89828a016113a1565b92505060a061146e89828a016113a1565b9150509295509295509295565b60006020820190506114906000830184610f6d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114dd57607f821691505b6020821081036114f0576114ef611496565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061153082610f0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611562576115616114f6565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611592565b6115d98683611592565b95508019841693508086168417925050509392505050565b6000819050919050565b600061161661161161160c84610f0a565b6115f1565b610f0a565b9050919050565b6000819050919050565b611630836115fb565b61164461163c8261161d565b84845461159f565b825550505050565b600090565b61165961164c565b611664818484611627565b505050565b5b818110156116885761167d600082611651565b60018101905061166a565b5050565b601f8211156116cd5761169e8161156d565b6116a784611582565b810160208510156116b6578190505b6116ca6116c285611582565b830182611669565b50505b505050565b600082821c905092915050565b60006116f0600019846008026116d2565b1980831691505092915050565b600061170983836116df565b9150826002028217905092915050565b61172282611034565b67ffffffffffffffff81111561173b5761173a61125f565b5b61174582546114c5565b61175082828561168c565b600060209050601f8311600181146117835760008415611771578287015190505b61177b85826116fd565b8655506117e3565b601f1984166117918661156d565b60005b828110156117b957848901518255600182019150602085019450602081019050611794565b868310156117d657848901516117d2601f8916826116df565b8355505b6001600288020188555050505b505050505050565b600060c0820190506118006000830189610f6d565b61180d6020830188610f6d565b818103604083015261181f818761108b565b90508181036060830152611833818661108b565b905061184260808301856110d1565b61184f60a08301846110d1565b979650505050505050565b7f416c72656164792066756e646564206f7220696e76616c696400000000000000600082015250565b600061189060198361103f565b915061189b8261185a565b602082019050919050565b600060208201905081810360008301526118bf81611883565b9050919050565b60006118d182610f0a565b91506118dc83610f0a565b92508282026118ea81610f0a565b91508282048414831517611901576119006114f6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061194282610f0a565b915061194d83610f0a565b92508261195d5761195c611908565b5b828204905092915050565b600061197382610f0a565b915061197e83610f0a565b9250828203905081811115611996576119956114f6565b5b92915050565b7f496e636f727265637420646973636f756e7465642066756e64696e6720616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b60006119f860238361103f565b9150611a038261199c565b604082019050919050565b60006020820190508181036000830152611a27816119eb565b9050919050565b7f4f6e6c792062757965722063616e206d61726b20706169640000000000000000600082015250565b6000611a6460188361103f565b9150611a6f82611a2e565b602082019050919050565b60006020820190508181036000830152611a9381611a57565b9050919050565b7f496e766f696365206e6f742066756e6465640000000000000000000000000000600082015250565b6000611ad060128361103f565b9150611adb82611a9a565b602082019050919050565b60006020820190508181036000830152611aff81611ac3565b9050919050565b60006040820190508181036000830152611b20818561108b565b9050611b2f6020830184610f6d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220f6a7edd15b4be4455173976610f4d0142c67460214993fda5576f088403faf9164736f6c63430008180033";

type FactraConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FactraConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Factra__factory extends ContractFactory {
  constructor(...args: FactraConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Factra & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Factra__factory {
    return super.connect(runner) as Factra__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactraInterface {
    return new Interface(_abi) as FactraInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Factra {
    return new Contract(address, _abi, runner) as unknown as Factra;
  }
}
